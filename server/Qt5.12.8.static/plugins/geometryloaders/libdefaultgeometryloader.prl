QMAKE_PRL_BUILD_DIR = /home/anonymous/dev/vscode-qml/server/qmljsreformatter/qt5/qt3d/src/plugins/geometryloaders/default
QMAKE_PRO_INPUT = default.pro
QMAKE_PRL_TARGET = libdefaultgeometryloader.a
QMAKE_PRL_CONFIG = lex yacc depend_includepath testcase_targets import_qpa_plugin qt_build_extra file_copies qmake_use qt warn_on release link_prl incremental release static linux unix posix gcc use_gold_linker sse2 aesni sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512bw avx512cd avx512dq avx512er avx512ifma avx512pf avx512vbmi avx512vl compile_examples enable_new_dtags f16c largefile precompile_header rdrnd shani x86SimdAlways prefix_build force_independent utf8_source create_prl link_prl prepare_docs qt_docs_targets no_private_qt_headers_warning QTDIR_build qt_example_installs exceptions_off testcase_exceptions explicitlib git_build plugin relative_qt_rpath create_cmake c++11 strict_c++ c++14 c++1z c99 c11 hide_symbols bsymbolic_functions have_target staticlib thread opengl moc resources gc_binaries dll
QMAKE_PRL_VERSION = 1.0.0
QMAKE_PRL_LIBS = $$[QT_INSTALL_LIBS]/libQt53DRender.a $$[QT_INSTALL_LIBS]/libQt5OpenGLExtensions.a $$[QT_INSTALL_LIBS]/libQt53DCore.a $$[QT_INSTALL_LIBS]/libQt5Gui.a /usr/lib/libpng16.so /usr/lib/libharfbuzz.so $$[QT_INSTALL_LIBS]/libQt5Network.a $$[QT_INSTALL_LIBS]/libQt5Concurrent.a $$[QT_INSTALL_LIBS]/libQt5Core.a -lm /usr/lib/libz.so /usr/lib/libicui18n.so /usr/lib/libicuuc.so /usr/lib/libicudata.so /usr/lib/libdl.so /usr/lib/libpcre2-16.so /usr/lib/libdouble-conversion.so /usr/lib/libgthread-2.0.so /usr/lib/libglib-2.0.so /usr/lib/libGL.so -lpthread
